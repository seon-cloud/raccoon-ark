/** Импортируем функции обработчики */
import { 
    seonApi, 
    allHealth, 
    allInfo, 
    allMap,
    invalidSsl,
    sslHandshakeFailed,
    webServerIsDown,
    gatewayTimeout,
    connectionTimedOut,
    unavailableService,
    badRequest,
    loopDetected,
    originUnreachable,
    networkAuthRequired,
    insufficientStorage,
    notSupported,
    timeoutOccurred,
    notImplemented, 
    badGateway,
    internalError,
    notExtended,
    unknownError,
    bandwidthLimitExceeded,
    variantAlsoNegotiates,
    unauthorized,
    paymentRequired,
    forbidden,
    notFound,
    methodNotAllowed,
    notAcceptable,
    proxyAuthenticationRequired,
    requestTimeout,
    conflict,
    gone,
    lengthRequired,
    preconditionFailed,
    payloadTooLarge,
    uriTooLong,
    unsupportedMediaType,
    rangeNotSatisfiable,
    expectationFailed,
    teapot,
    authTimeout,
    misdirectedRequest,
    unprocessableEntity,
    locked,
    failedDependency,
    tooEarly,
    upgradeRequired,
    preconditionRequired,
    tooManyRequests,
    largeHeaders,
    retryWith,
    unavailableReasons,
    clientClosedRequest
} from './defaults/actions.mjs';

/** Составляем объейт для с функциями обработчиками по умолчанию */
export const DEFAULT_ACTIONS = { 
    seonApi, 
    allHealth, 
    allInfo, 
    allMap,
    invalidSsl,
    sslHandshakeFailed,
    webServerIsDown,
    gatewayTimeout,
    connectionTimedOut,
    unavailableService,
    badRequest,
    loopDetected,
    originUnreachable,
    networkAuthRequired,
    insufficientStorage,
    notSupported,
    timeoutOccurred,
    notImplemented, 
    badGateway,
    internalError,
    notExtended,
    unknownError,
    bandwidthLimitExceeded,
    variantAlsoNegotiates,
    unauthorized,
    paymentRequired,
    forbidden,
    notFound,
    methodNotAllowed,
    notAcceptable,
    proxyAuthenticationRequired,
    requestTimeout,
    conflict,
    gone,
    lengthRequired,
    preconditionFailed,
    payloadTooLarge,
    uriTooLong,
    unsupportedMediaType,
    rangeNotSatisfiable,
    expectationFailed,
    teapot,
    authTimeout,
    misdirectedRequest,
    unprocessableEntity,
    locked,
    failedDependency,
    tooEarly,
    upgradeRequired,
    preconditionRequired,
    tooManyRequests,
    largeHeaders,
    retryWith,
    unavailableReasons,
    clientClosedRequest
};

/** Маршрут для стандартного обработчика ответа */
export const DEFAULT_ANSWERS = {
    default: 'seonApi'
};

/** Задаём маршруты по-умолчаию для ошибок */
export const DEFAULT_ERRORS = {
    NotImplemented: 'notImplemented',
    BadGateway: 'badGateway',
    BadRequest: 'badRequest',
    Unauthorized: 'unauthorized',
    PaymentRequired: 'paymentRequired',
    Forbidden: 'forbidden',
    NotFound: 'notFound',
    MethodNotAllowed: 'methodNotAllowed',
    NotAcceptable: 'notAcceptable',
    ProxyAuthRequired: 'proxyAuthenticationRequired',
    RequestTimeout: 'requestTimeout',
    Conflict: 'conflict',
    Gone: 'gone',
    LengthRequired: 'lengthRequired',
    PreconditionFailed: 'preconditionFailed',
    PayloadTooLarge: 'payloadTooLarge',
    UriTooLong: 'uriTooLong',
    UnsupportedMediaType: 'unsupportedMediaType',
    RangeNotSatisfiable: 'rangeNotSatisfiable',
    ExpectationFailed: 'expectationFailed',
    Teapot: 'teapot',
    AuthTimeout: 'authTimeout',
    MisdirectedRequest: 'misdirectedRequest',
    UnprocessableEntity: 'unprocessableEntity',
    Locked: 'locked',
    FailedDependency: 'failedDependency',
    TooEarly: 'tooEarly',
    UpgradeRequired: 'upgradeRequired',
    PreconditionRequired: 'preconditionRequired',
    TooManyRequests: 'tooManyRequests',
    LargeHeaders: 'largeHeaders',
    RetryWith: 'RetryWith',
    UnavailableReasons: 'unavailableReasons',
    ClientClosedRequest: 'clientClosedRequest',
    InternalError: 'internalError',
    UnavailableService: 'unavailableService',
    GatewayTimeout: 'gatewayTimeout',
    NotSupported: 'notSupported',
    VariantAlsoNegotiates: 'variantAlsoNegotiates',
    InsufficientStorage: 'insufficientStorage',
    LoopDetected: 'loopDetected',
    BandwidthLimitExceeded: 'bandwidthLimitExceeded',
    NotExtended: 'notExtended',
    NetworkAuthRequired: 'networkAuthRequired',
    UnknownError: 'unknownError',
    WebServerIsDown: 'webServerIsDown',
    ConnectionTimedOut: 'connectionTimedOut',
    OriginUnreachable: 'originUnreachable',
    timeoutOccurred: 'TimeoutOccurred',
    SslHandshakeFailed: 'sslHandshakeFailed',
    InvalidSsl: 'invalidSsl'
};


/** Задаём стандартные маршруты для запросов */
export const DEFAULT_ROUTES = {
    '/~health': 'allHealth',
    '/~map': 'allMap',
    '/~info': 'allInfo' 
};
